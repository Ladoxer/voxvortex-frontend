.container {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

/* Enhanced typography and content styling */
:host {
  display: block;
  background-color: #fff;
}

/* Animated loading effect for the page */
.loading-skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Enhance prose elements */
::ng-deep .prose img {
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

::ng-deep .prose blockquote {
  border-left-color: var(--primary-color, #4338ca);
  font-style: italic;
  background-color: rgba(0, 0, 0, 0.02);
  padding: 1rem 1.5rem;
  border-radius: 0.25rem;
}

::ng-deep .prose pre {
  background-color: #1e293b;
  color: #e2e8f0;
  padding: 1.25rem;
  border-radius: 0.5rem;
  overflow-x: auto;
}

::ng-deep .prose h2 {
  margin-top: 2rem;
  margin-bottom: 1rem;
  font-weight: 700;
  font-size: 1.75rem;
  line-height: 1.3;
}

::ng-deep .prose h3 {
  margin-top: 1.5rem;
  margin-bottom: 0.75rem;
  font-weight: 600;
  font-size: 1.5rem;
  line-height: 1.3;
}

/* Smooth transitions for interactive elements */
.btn {
  transition: all 0.2s ease-in-out;
}

.avatar {
  transition: transform 0.2s ease-in-out;
}

.avatar:hover {
  transform: scale(1.05);
}

/* Enhance reading experience */
@media (min-width: 768px) {
  .prose {
    font-size: 1.125rem;
    line-height: 1.8;
  }
  
  ::ng-deep .prose p {
    margin-bottom: 1.5rem;
  }
}

/* Sticky audio controls for premium users */
.audio-controls-sticky {
  position: sticky;
  bottom: 1rem;
  z-index: 10;
  margin: 0 auto;
  width: 100%;
  max-width: 600px;
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  padding: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transform: translateY(100px);
  animation: slideUp 0.3s forwards;
}

@keyframes slideUp {
  to {
    transform: translateY(0);
  }
}

/* Progress bar for reading */
.reading-progress-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: transparent;
  z-index: 100;
}

.reading-progress-bar {
  height: 100%;
  background: var(--primary-color, #4338ca);
  width: 0%;
  transition: width 0.1s ease;
}